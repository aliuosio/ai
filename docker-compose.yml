services:

  open-webui:
    container_name: ${NAMESPACE}_open-webui
    image: ghcr.io/open-webui/open-webui:latest-cuda
    pull_policy: if_not_present # Changed from always
    depends_on:
      - ollama
    ports:
      - "3000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    environment:
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      # - NVIDIA_VISIBLE_DEVICES=all # Removed, handled by deploy.resources
      # - CUDA_VISIBLE_DEVICES=0 # Removed, handled by deploy.resources
    # runtime: nvidia # Removed, handled by deploy.resources
    volumes:
      - webui-data:/app/backend/data # Use named volume pointing to host path
    deploy:
      resources:
        reservations:
          devices:
            - driver: ${OLLAMA_GPU_DRIVER-nvidia}
              count: 1
              capabilities:
                - gpu

  ollama:
    container_name: ${NAMESPACE}_ollama
    image: ollama/ollama:latest
    pull_policy: if_not_present # Changed from always
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      # - NVIDIA_VISIBLE_DEVICES=all # Removed, handled by deploy.resources
      # - CUDA_VISIBLE_DEVICES=0 # Removed, handled by deploy.resources
    tty: true
    init: true
    # privileged: true # Removed, deploy.resources should suffice for GPU
    volumes:
      - ollama-data:/root/.ollama # Use named volume pointing to host path
    deploy:
      resources:
        reservations:
          devices:
            - driver: ${OLLAMA_GPU_DRIVER-nvidia}
              count: 1
              capabilities:
                - gpu

volumes:
  webui-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '~/.webui'
  ollama-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '~/.ollama'
